# -*- coding: UTF-8 -*-

#-----------------------------------------------------------------------------
# Python source generated by wxDesigner from file: catart.wdr
# Do not modify this file, all changes will be lost!
#-----------------------------------------------------------------------------

# Include wxPython modules
import wx
import wx.grid
import wx.animate

# Custom source
from anag.basetab import AnagCardPanel, WorkZoneNotebook
from anag.lib import LinkTablePdc

from awc.controls.linktable import LinkTable
from awc.controls.attachbutton import AttachmentButton

import awc.controls.windows as aw

from Env import Azienda
bt = Azienda.BaseTab

from anag.lib import LinkTablePdc, LinkTablePdcCosti, LinkTablePdcRicavi

from awc.controls.checkbox import CheckBox, CheckListBox, CheckListFromText

import stormdb

class AttivaCausali(CheckListFromText):
    def __init__(self, *args, **kwargs):
        CheckListFromText.__init__(self, *args, **kwargs)
        
        c=stormdb.DbTable(bt.TABNAME_CFGMAGDOC)
        c.Retrieve()        
        for t in c:
            self.Append('%s - %s' % (c.codice, c.descriz))
            self.SetPyData(self.GetCount()-1,'%s' % c.id)

# Window functions

ID_ANAGMAIN = 16000
ID_WORKZONE = 16001

def CatArtCardFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.FlexGridSizer( 0, 1, 0, 0 )
    
    item1 = AnagCardPanel(parent)
    item0.Add( item1, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item3 = WorkZoneNotebook( parent, ID_WORKZONE, wx.DefaultPosition, [200,160], 0 )
    item2 = item3
    
    item4 = aw.Panel(item3, -1); item4.SetName('CatArtAnagPage')
    CatArtCardAnagFunc(item4, False)
    item3.AddPage( item4, "Dati anagrafici" )

    item0.Add( item2, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.LEFT|wx.RIGHT|wx.BOTTOM, 5 )

    item0.AddGrowableCol( 0 )

    item0.AddGrowableRow( 1 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

ID_TEXT = 16002
ID_PDCACQ = 16003
ID_PDCVEN = 16004
ID_LTAB = 16005

def CatArtCardAnagFunc( parent, call_fit = True, set_sizer = True ):
    item0 = wx.FlexGridSizer( 0, 1, 0, 0 )
    
    item2 = wx.StaticBox( parent, -1, "Nella contabilizzazione dal magazzino, usa i seguenti sottoconti:" )
    item1 = wx.StaticBoxSizer( item2, wx.VERTICAL )
    
    item3 = wx.FlexGridSizer( 0, 2, 0, 0 )
    
    item4 = wx.StaticText( parent, ID_TEXT, "Acquisti:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item4, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.LEFT|wx.TOP|wx.BOTTOM, 5 )

    item5 = LinkTablePdcCosti(parent, ID_PDCACQ, 'id_pdcacq')
    item3.Add( item5, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item6 = wx.StaticText( parent, ID_TEXT, "Vendite:", wx.DefaultPosition, wx.DefaultSize, 0 )
    item3.Add( item6, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.LEFT|wx.BOTTOM, 5 )

    item7 = LinkTablePdcRicavi(parent, ID_PDCVEN, 'id_pdcven')
    item3.Add( item7, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.LEFT|wx.RIGHT|wx.BOTTOM, 5 )

    item3.AddGrowableCol( 1 )

    item1.Add( item3, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL, 5 )

    item0.Add( item1, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item8 = wx.BoxSizer( wx.HORIZONTAL )
    
    item9 = wx.FlexGridSizer( 0, 1, 0, 0 )
    
    item10 = wx.StaticText( parent, ID_TEXT, "Accessibile dai seguenti documenti", wx.DefaultPosition, wx.DefaultSize, 0 )
    item9.Add( item10, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item11 = AttivaCausali( parent, ID_LTAB, wx.DefaultPosition, [220,300], [], 0 )
    item11.SetName( "caudoc" )
    item9.Add( item11, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL, 5 )

    item9.AddGrowableCol( 0 )

    item9.AddGrowableRow( 1 )

    item8.Add( item9, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.Add( item8, 0, wx.GROW|wx.ALIGN_CENTER_VERTICAL|wx.ALL, 5 )

    item0.AddGrowableCol( 0 )

    item0.AddGrowableRow( 1 )

    if set_sizer == True:
        parent.SetSizer( item0 )
        if call_fit == True:
            item0.SetSizeHints( parent )
    
    return item0

# Menubar functions

# Toolbar functions

# Bitmap functions


# End of generated file
